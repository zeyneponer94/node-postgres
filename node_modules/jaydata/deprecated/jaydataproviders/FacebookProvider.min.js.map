{"version":3,"sources":["FacebookProvider.js","src/Types/StorageProviders/Facebook/EntitySets/FQLContext.js","src/Types/StorageProviders/Facebook/EntitySets/FQL/friend.js","src/Types/StorageProviders/Facebook/EntitySets/FQL/page.js","src/Types/StorageProviders/Facebook/EntitySets/FQL/user.js","src/Types/StorageProviders/Facebook/FacebookCompiler.js","src/Types/StorageProviders/Facebook/FacebookConverter.js","src/Types/StorageProviders/Facebook/FacebookProvider.js","src/Types/StorageProviders/Facebook/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","$data","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","_interopRequireDefault","obj","__esModule","default","_core","_core2","Class","constructor","cfg","Config","typeSystem","extend","CommandValue","toString","to$data.Integer","value","to$data.Number","EntityContext","friendsQuery","Friends","where","uid1","me","Facebook","FQLCommands","select","uid2","MyFriends","Users","uid","friends","dataType","EntitySet","tableName","elementType","types","FbUser","FbFriend","Pages","FbPage","__namespace","storageProviders","EntitySets","Command","now","jaydata/core","2","Entity","type","key","searchable","3","page_id","isPublic","name","username","description","categories","is_community_page","pic_small","pic_big","pic_square","pic","pic_large","pic_cover","unread_notif_count","new_like_count","fan_count","website","has_added_app","general_info","can_post","checkins","is_published","founded","company_overview","mission","products","location","parking","hours","pharma_safety_info","public_transit","attire","payment_options","culinary_team","general_manager","price_range","restaurant_services","restaurant_specialties","phone","release_date","genre","starring","screenplay_by","directed_by","produced_by","studio","awards","plot_outline","season","network","schedule","written_by","band_members","hometown","current_location","record_label","booking_agent","press_contact","artists_we_like","influences","band_interests","bio","affiliation","birthday","personal_info","personal_interests","built","features","mpg","4","first_name","middle_name","last_name","affiliations","profile_update_time","timezone","religion","birthday_date","sex","hometown_location","meeting_sex","meeting_for","relationship_status","significant_other_id","political","activities","interests","is_app_user","music","tv","movies","books","quotes","about_me","hs_info","education_history","work_history","notes_count","wall_count","status","online_presence","locale","proxied_email","profile_url","email_hashes","pic_small_with_logo","pic_big_with_logo","pic_square_with_logo","pic_with_logo","allowed_restrictions","verified","profile_blurb","family","is_blocked","contact_email","email","third_party_id","name_format","video_upload_limits","games","work","education","sports","favorite_athletes","favorite_teams","inspirational_people","languages","likes_count","friend_count","mutual_friend_count","5","$C","Expressions","EntityExpressionVisitor","provider","compile","query","context","storageProvider","filterSql","sql","projectionSql","orderSql","skipSql","takeSql","Visit","expression","autoGeneratedSelect","autoGenerateProjection","Guard","raise","Exception","queryText","selectMapping","selectFields","params","entitySet","getEntitySetFromElementType","defaultType","newQueryable","Queryable","codeExpression","Container","createCodeExpression","generateProjectionFunc","exp","createProjectionExpression","q","createQueryable","preparator","createQueryExpressionCreator","databaseQuery","isAuthenticated","AuthenticationProvider","Authenticated","providerConfiguration","Access_Token","publicMemberDefinitions","memberDefinitions","getPublicMappedProperties","some","memDef","filter","selectStr","forEach","VisitFilterExpression","source","nodeType","selector","VisitProjectionExpression","VisitOrderExpression","ExpressionType","OrderByDescending","VisitPagingExpression","Skip","amount","Take","VisitSimpleBinaryExpression","left","resolution","mapTo","resolvableType","requireType","right","Array","item","VisitEntityFieldExpression","VisitMemberInfoExpression","memberName","fieldData","memberDefinition","fieldOperation","from","VisitConstantExpression","VisitQueryParameterExpression","toTraceString","expressionValueType","resolveType","supportedDataTypes","indexOf","fieldConverter","toDb","resolveName","VisitParametricQueryExpression","parameters","VisitEntitySetExpression","instance","VisitObjectLiteralExpression","members","member","ObjectLiteralExpression","mappingPrefix","push","fieldName","pop","toProperty","join","to","VisitObjectFieldExpression","VisitEntityFieldOperationExpression","operation","MemberInfoExpression","opDef","opName","expressionInParameter","paramCounter","args","map","index","result","itemType","arg","undefined","rigthValue","6","FacebookConverter","fromDb","$data.Byte","proxyConverter","$data.SByte","$data.Decimal","$data.Float","$data.Int16","$data.Int64","$data.Number","$data.Integer","$data.String","$data.Date","Date","parseInt","$data.Boolean","$data.Blob","$data.Array","valueOf","7","StorageProviderBase","SqlCommands","FQLFormat","FQLQueryUrl","initializeStore","callBack","PromiseHandlerBase","createCallbackSettings","success","enumerable","Integer","Number","String","Boolean","Blob","writable","supportedFieldOperations","contains","allowedIn","FilterExpression","startsWith","strpos","ProjectionExpression","substr","strlen","supportedBinaryOperators","equal","notEqual","equalTyped","notEqualTyped","greaterThan","greaterThanOrEqual","lessThan","lessThenOrEqual","or","and","Booleanv","in","supportedUnaryOperators","supportedSetOperations","toArray","single","take","skip","orderBy","orderByDescending","first","executeQuery","Authentication","Anonymous","_compile","error","schema","includes","_discoverType","requestUrl","encodeURIComponent","requestData","url","data","textStatus","jqXHR","rawDataList","compiler","createModelBinderConfigCompiler","CountExpression","cnt","errorThrow","errorData","JSON","parse","responseText","prepareRequest","CreateRequest","dept","isAssignableTo","inverseProperty","sqlText","createFacebookCompiler","getTraceString","setContext","ctx","saveChanges","registerProvider","FacebookProvider","8","Object","defineProperty","_FacebookConverter","_FacebookProvider","_FacebookCompiler","_user","_friend","_page","_FQLContext","./EntitySets/FQL/friend.js","./EntitySets/FQL/page.js","./EntitySets/FQL/user.js","./EntitySets/FQLContext.js","./FacebookCompiler.js","./FacebookConverter.js","./FacebookProvider.js"],"mappings":"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","file":"FacebookProvider.min.js","sourcesContent":["﻿// JayData 1.5.10 \r\n// Dual licensed under MIT and GPL v2\r\n// Copyright JayStack Technologies (http://jaydata.org/licensing)\r\n//\r\n// JayData is a standards-based, cross-platform Javascript library and a set of\r\n// practices to access and manipulate data from various online and offline sources.\r\n//\r\n// Credits:\r\n//     Hajnalka Battancs, Dániel József, János Roden, László Horváth, Péter Nochta\r\n//     Péter Zentai, Róbert Bónay, Szabolcs Czinege, Viktor Borza, Viktor Lázár,\r\n//     Zoltán Gyebrovszki, Gábor Dolla\r\n//\r\n// More info: http://jaydata.org\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define(\"jaydata/facebook\",[\"jaydata/core\"],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.$data = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_core2.default.Class.define('$data.storageProviders.Facebook.EntitySets.Command', null, null, {\n    constructor: function constructor(cfg) {\n        this.Config = _core2.default.typeSystem.extend({\n            CommandValue: \"\"\n        }, cfg);\n    },\n    toString: function toString() {\n        return this.Config.CommandValue;\n    },\n    Config: {}\n}, {\n    'to$data.Integer': function to$dataInteger(value) {\n        return value;\n    },\n    'to$data.Number': function to$dataNumber(value) {\n        return value;\n    }\n});\n\n_core2.default.Class.define(\"$data.Facebook.FQLContext\", _core2.default.EntityContext, null, {\n    constructor: function constructor() {\n        var friendsQuery = this.Friends.where(function (f) {\n            return f.uid1 == this.me;\n        }, { me: _core2.default.Facebook.FQLCommands.me }).select(function (f) {\n            return f.uid2;\n        });\n\n        this.MyFriends = this.Users.where(function (u) {\n            return u.uid in this.friends;\n        }, { friends: friendsQuery });\n    },\n    Users: {\n        dataType: _core2.default.EntitySet,\n        tableName: 'user',\n        elementType: _core2.default.Facebook.types.FbUser\n    },\n    Friends: {\n        dataType: _core2.default.EntitySet,\n        tableName: 'friend',\n        elementType: _core2.default.Facebook.types.FbFriend\n    },\n    Pages: {\n        dataType: _core2.default.EntitySet,\n        tableName: 'page',\n        elementType: _core2.default.Facebook.types.FbPage\n    }\n}, null);\n\n_core2.default.Facebook.FQLCommands = {\n    __namespace: true,\n    me: new _core2.default.storageProviders.Facebook.EntitySets.Command({ CommandValue: \"me()\" }),\n    now: new _core2.default.storageProviders.Facebook.EntitySets.Command({ CommandValue: \"now()\" })\n};\n\n},{\"jaydata/core\":\"jaydata/core\"}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _core = _dereq_(\"jaydata/core\");\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_core2.default.Class.define(\"$data.Facebook.types.FbFriend\", _core2.default.Entity, null, {\n    uid1: { type: \"number\", key: true, searchable: true },\n    uid2: { type: \"number\", key: true, searchable: true }\n}, null);\n\n},{\"jaydata/core\":\"jaydata/core\"}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _core = _dereq_(\"jaydata/core\");\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_core2.default.Class.define(\"$data.Facebook.types.FbPage\", _core2.default.Entity, null, {\n    page_id: { type: \"number\", key: true, isPublic: true, searchable: true },\n    name: { type: \"string\", isPublic: true, searchable: true },\n    username: { type: \"string\", isPublic: true, searchable: true },\n    description: { type: \"string\", isPublic: true },\n    categories: { type: \"array\", isPublic: true }, //array\tThe categories\n    is_community_page: { type: \"bool\", isPublic: true }, //string\tIndicates whether the Page is a community Page.\n    pic_small: { type: \"string\", isPublic: true },\n    pic_big: { type: \"string\", isPublic: true },\n    pic_square: { type: \"string\", isPublic: true },\n    pic: { type: \"string\", isPublic: true },\n    pic_large: { type: \"string\", isPublic: true },\n    pic_cover: { type: \"object\", isPublic: true }, //object\tThe JSON object containing three fields:�cover_id�(the ID of the cover photo),�source�(the URL for the cover photo), andoffset_y�(indicating percentage offset from top [0-100])\n    unread_notif_count: { type: \"number\", isPublic: false },\n    new_like_count: { type: \"number\", isPublic: false },\n    fan_count: { type: \"number\", isPublic: true },\n    type: { type: \"string\", isPublic: true },\n    website: { type: \"string\", isPublic: true },\n    has_added_app: { type: \"bool\", isPublic: true },\n    general_info: { type: \"string\", isPublic: true },\n    can_post: { type: \"bool\", isPublic: true },\n    checkins: { type: \"number\", isPublic: true },\n    is_published: { type: \"bool\", isPublic: true },\n    founded: { type: \"string\", isPublic: true },\n    company_overview: { type: \"string\", isPublic: true },\n    mission: { type: \"string\", isPublic: true },\n    products: { type: \"string\", isPublic: true },\n    location: { type: \"object\", isPublic: true }, //\tarray\tApplicable to all�Places.\n    parking: { type: \"object\", isPublic: true }, //     array\tApplicable to�Businesses�and�Places. Can be one of�street,�lot�orvalet\n    hours: { type: \"array\", isPublic: true }, //\tarray\tApplicable to�Businesses�and�Places.\n    pharma_safety_info: { type: \"string\", isPublic: true },\n    public_transit: { type: \"string\", isPublic: true },\n    attire: { type: \"string\", isPublic: true },\n    payment_options: { type: \"object\", isPublic: true }, //array\tApplicable to�Restaurants�or�Nightlife.\n    culinary_team: { type: \"string\", isPublic: true },\n    general_manager: { type: \"string\", isPublic: true },\n    price_range: { type: \"string\", isPublic: true },\n    restaurant_services: { type: \"object\", isPublic: true }, //\tarray\tApplicable to�Restaurants.\n    restaurant_specialties: { type: \"object\", isPublic: true }, //\tarray\tApplicable to�Restaurants.\n    phone: { type: \"string\", isPublic: true },\n    release_date: { type: \"string\", isPublic: true },\n    genre: { type: \"string\", isPublic: true },\n    starring: { type: \"string\", isPublic: true },\n    screenplay_by: { type: \"string\", isPublic: true },\n    directed_by: { type: \"string\", isPublic: true },\n    produced_by: { type: \"string\", isPublic: true },\n    studio: { type: \"string\", isPublic: true },\n    awards: { type: \"string\", isPublic: true },\n    plot_outline: { type: \"string\", isPublic: true },\n    season: { type: \"string\", isPublic: true },\n    network: { type: \"string\", isPublic: true },\n    schedule: { type: \"string\", isPublic: true },\n    written_by: { type: \"string\", isPublic: true },\n    band_members: { type: \"string\", isPublic: true },\n    hometown: { type: \"string\", isPublic: true },\n    current_location: { type: \"string\", isPublic: true },\n    record_label: { type: \"string\", isPublic: true },\n    booking_agent: { type: \"string\", isPublic: true },\n    press_contact: { type: \"string\", isPublic: true },\n    artists_we_like: { type: \"string\", isPublic: true },\n    influences: { type: \"string\", isPublic: true },\n    band_interests: { type: \"string\", isPublic: true },\n    bio: { type: \"string\", isPublic: true },\n    affiliation: { type: \"string\", isPublic: true },\n    birthday: { type: \"string\", isPublic: true },\n    personal_info: { type: \"string\", isPublic: true },\n    personal_interests: { type: \"string\", isPublic: true },\n    built: { type: \"string\", isPublic: true },\n    features: { type: \"string\", isPublic: true },\n    mpg: { type: \"string\", isPublic: true }\n}, null);\n\n},{\"jaydata/core\":\"jaydata/core\"}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _core = _dereq_(\"jaydata/core\");\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_core2.default.Class.define(\"$data.Facebook.types.FbUser\", _core2.default.Entity, null, {\n    uid: { type: \"number\", key: true, isPublic: true, searchable: true },\n    username: { type: \"string\", isPublic: true, searchable: true },\n    first_name: { type: \"string\", isPublic: true },\n    middle_name: { type: \"string\", isPublic: true },\n    last_name: { type: \"string\", isPublic: true },\n    name: { type: \"string\", isPublic: true, searchable: true },\n    pic_small: { type: \"string\" },\n    pic_big: { type: \"string\" },\n    pic_square: { type: \"string\" },\n    pic: { type: \"string\" },\n    affiliations: { type: \"Array\", elementType: \"Object\" },\n    profile_update_time: { type: \"datetime\" },\n    timezone: { type: \"number\" },\n    religion: { type: \"string\" },\n    birthday: { type: \"string\" },\n    birthday_date: { type: \"string\" },\n    sex: { type: \"string\", isPublic: true },\n    hometown_location: { type: \"Array\", elementType: \"Object\" },\n    meeting_sex: { type: \"Array\", elementType: \"Object\" },\n    meeting_for: { type: \"Array\", elementType: \"Object\" },\n    relationship_status: { type: \"string\" },\n    significant_other_id: { type: \"number\" /*uid*/ },\n    political: { type: \"string\" },\n    current_location: { type: \"Array\", elementType: \"Object\" },\n    activities: { type: \"string\" },\n    interests: { type: \"string\" },\n    is_app_user: { type: \"bool\" },\n    music: { type: \"string\" },\n    tv: { type: \"string\" },\n    movies: { type: \"string\" },\n    books: { type: \"string\" },\n    quotes: { type: \"string\" },\n    about_me: { type: \"string\" },\n    hs_info: { type: \"Array\", elementType: \"Object\" },\n    education_history: { type: \"Array\", elementType: \"Object\" },\n    work_history: { type: \"Array\", elementType: \"Object\" },\n    notes_count: { type: \"number\" },\n    wall_count: { type: \"number\" },\n    status: { type: \"string\" },\n    has_added_app: { type: \"bool\" },\n    online_presence: { type: \"string\" },\n    locale: { type: \"string\", isPublic: true },\n    proxied_email: { type: \"string\" },\n    profile_url: { type: \"string\" },\n    email_hashes: { type: \"Array\", elementType: \"Object\" },\n    pic_small_with_logo: { type: \"string\", isPublic: true },\n    pic_big_with_logo: { type: \"string\", isPublic: true },\n    pic_square_with_logo: { type: \"string\", isPublic: true },\n    pic_with_logo: { type: \"string\", isPublic: true },\n    allowed_restrictions: { type: \"string\" },\n    verified: { type: \"bool\" },\n    profile_blurb: { type: \"string\" },\n    family: { type: \"Array\", elementType: \"Object\" },\n    website: { type: \"string\" },\n    is_blocked: { type: \"bool\" },\n    contact_email: { type: \"string\" },\n    email: { type: \"string\" },\n    third_party_id: { type: \"string\", searchable: true },\n    name_format: { type: \"string\" },\n    video_upload_limits: { type: \"Array\", elementType: \"Object\" },\n    games: { type: \"string\" },\n    work: { type: \"Array\", elementType: \"Object\" },\n    education: { type: \"Array\", elementType: \"Object\" },\n    sports: { type: \"Array\", elementType: \"Object\" },\n    favorite_athletes: { type: \"Array\", elementType: \"Object\" },\n    favorite_teams: { type: \"Array\", elementType: \"Object\" },\n    inspirational_people: { type: \"Array\", elementType: \"Object\" },\n    languages: { type: \"Array\", elementType: \"Object\" },\n    likes_count: { type: \"number\" },\n    friend_count: { type: \"number\" },\n    mutual_friend_count: { type: \"number\" },\n    can_post: { type: \"bool\" }\n}, null);\n\n},{\"jaydata/core\":\"jaydata/core\"}],5:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\"use strict\";\t// suspicious code\n\n(0, _core.$C)('$data.storageProviders.Facebook.FacebookCompiler', _core2.default.Expressions.EntityExpressionVisitor, null, {\n    constructor: function constructor() {\n        this.provider = {};\n    },\n\n    compile: function compile(query) {\n        this.provider = query.context.storageProvider;\n\n        var context = {\n            filterSql: { sql: '' },\n            projectionSql: { sql: '' },\n            orderSql: { sql: '' },\n            skipSql: { sql: '' },\n            takeSql: { sql: '' },\n            tableName: ''\n        };\n        this.Visit(query.expression, context);\n\n        var autoGeneratedSelect = false;\n        if (!context.projectionSql.sql) {\n            context.projectionSql = this.autoGenerateProjection(query);\n            autoGeneratedSelect = true;\n        }\n\n        if (context.filterSql.sql == '') _core.Guard.raise(new _core.Exception('Filter/where statement is required', 'invalid operation'));\n\n        return {\n            queryText: context.projectionSql.sql + ' FROM ' + context.tableName + context.filterSql.sql + context.orderSql.sql + context.takeSql.sql + (context.takeSql.sql ? context.skipSql.sql : ''),\n            selectMapping: autoGeneratedSelect == false ? context.projectionSql.selectFields : null,\n            params: []\n        };\n    },\n\n    autoGenerateProjection: function autoGenerateProjection(query) {\n        var entitySet = query.context.getEntitySetFromElementType(query.defaultType);\n        var newQueryable = new _core2.default.Queryable(query.context, entitySet.expression);\n        //newQueryable._checkRootExpression(entitySet.collectionName);\n        var codeExpression = _core.Container.createCodeExpression(this.generateProjectionFunc(query));\n        var exp = _core.Container.createProjectionExpression(newQueryable.expression, codeExpression);\n        var q = _core.Container.createQueryable(newQueryable, exp);\n\n        var expression = q.expression;\n        var preparator = _core.Container.createQueryExpressionCreator(query.context);\n        expression = preparator.Visit(expression);\n\n        var databaseQuery = {\n            projectionSql: { sql: '' }\n        };\n        this.Visit(expression, databaseQuery);\n\n        return databaseQuery.projectionSql;\n    },\n    generateProjectionFunc: function generateProjectionFunc(query) {\n        var isAuthenticated = this.provider.AuthenticationProvider.Authenticated || this.provider.providerConfiguration.Access_Token;\n        var publicMemberDefinitions = query.defaultType.memberDefinitions.getPublicMappedProperties();\n        if (!isAuthenticated && publicMemberDefinitions.some(function (memDef) {\n            return memDef.isPublic == true;\n        })) {\n            publicMemberDefinitions = publicMemberDefinitions.filter(function (memDef) {\n                return memDef.isPublic == true;\n            });\n        }\n\n        var selectStr = 'function (s){ return {';\n        publicMemberDefinitions.forEach(function (memDef, i) {\n            if (i != 0) selectStr += ', ';\n            selectStr += memDef.name + ': s.' + memDef.name;\n        });\n        selectStr += '}; }';\n\n        //var projectionFunc = null;\n        //eval(selectStr);\n        return selectStr;\n    },\n\n    VisitFilterExpression: function VisitFilterExpression(expression, context) {\n        ///<param name=\"expression\" type=\"$data.Expressions.FilterExpression\" />\n        this.Visit(expression.source, context);\n\n        context.filterSql.type = expression.nodeType;\n        if (context.filterSql.sql == '') context.filterSql.sql = ' WHERE ';else context.filterSql.sql += ' AND ';\n\n        this.Visit(expression.selector, context.filterSql);\n    },\n    VisitProjectionExpression: function VisitProjectionExpression(expression, context) {\n        ///<param name=\"expression\" type=\"$data.Expressions.ProjectionExpression\" />\n        this.Visit(expression.source, context);\n\n        context.projectionSql.type = expression.nodeType;\n        if (context.projectionSql.sql == '') context.projectionSql.sql = 'SELECT ';else _core.Guard.raise(new _core.Exception('Multiple select error'));\n\n        this.Visit(expression.selector, context.projectionSql);\n    },\n    VisitOrderExpression: function VisitOrderExpression(expression, context) {\n        ///<param name=\"expression\" type=\"$data.Expressions.OrderExpression\" />\n        this.Visit(expression.source, context);\n\n        context.orderSql.type = expression.nodeType;\n        if (context.orderSql.sql == '') context.orderSql.sql = ' ORDER BY ';else _core.Guard.raise(new _core.Exception('Multiple sorting not supported', 'not supported'));\n\n        this.Visit(expression.selector, context.orderSql);\n        context.orderSql.sql += expression.nodeType == _core2.default.Expressions.ExpressionType.OrderByDescending ? \" DESC\" : \" ASC\";\n    },\n    VisitPagingExpression: function VisitPagingExpression(expression, context) {\n        ///<param name=\"expression\" type=\"$data.Expressions.PagingExpression\" />\n        this.Visit(expression.source, context);\n\n        if (expression.nodeType == _core2.default.Expressions.ExpressionType.Skip) {\n            context.skipSql.type = expression.nodeType;\n            context.skipSql.sql = ' OFFSET ';\n            this.Visit(expression.amount, context.skipSql);\n        } else if (expression.nodeType == _core2.default.Expressions.ExpressionType.Take) {\n            context.takeSql.type = expression.nodeType;\n            context.takeSql.sql = ' LIMIT ';\n            this.Visit(expression.amount, context.takeSql);\n        }\n    },\n\n    VisitSimpleBinaryExpression: function VisitSimpleBinaryExpression(expression, context) {\n        context.sql += \"(\";\n        var left = this.Visit(expression.left, context);\n        context.sql += expression.resolution.mapTo;\n\n        if (expression.resolution.resolvableType && !_core.Guard.requireType(expression.resolution.mapTo + ' expression.right.value', expression.right.value, expression.resolution.resolvableType)) {\n            _core.Guard.raise(new _core.Exception(expression.right.type + \" not allowed in '\" + expression.resolution.mapTo + \"' statement\", \"invalid operation\"));\n        }\n\n        if (expression.resolution.name === 'in' && expression.right.value instanceof Array) {\n            var self = this;\n            context.sql += \"(\";\n            expression.right.value.forEach(function (item, i) {\n                if (i > 0) context.sql += \", \";\n                self.Visit(item, context);\n            });\n            context.sql += \")\";\n        } else {\n            var right = this.Visit(expression.right, context);\n        }\n        context.sql += \")\";\n    },\n\n    VisitEntityFieldExpression: function VisitEntityFieldExpression(expression, context) {\n        var source = this.Visit(expression.selector, context);\n    },\n    VisitMemberInfoExpression: function VisitMemberInfoExpression(expression, context) {\n        var memberName = expression.memberName;\n        context.sql += memberName;\n        //context.fieldName = memberName;\n        context.fieldData = { name: memberName, dataType: expression.memberDefinition.dataType };\n\n        if (context.type == 'Projection' && !context.selectFields) {\n            if (context.fieldOperation === true) context.selectFields = [{ from: 'anon' }];else context.selectFields = [{ from: memberName, dataType: expression.memberDefinition.dataType }];\n        }\n    },\n\n    VisitConstantExpression: function VisitConstantExpression(expression, context) {\n        if (context.type == 'Projection') _core.Guard.raise(new _core.Exception('Constant value is not supported in Projection.', 'Not supported!'));\n\n        this.VisitQueryParameterExpression(expression, context);\n    },\n\n    VisitQueryParameterExpression: function VisitQueryParameterExpression(expression, context) {\n        if (expression.value instanceof _core2.default.storageProviders.Facebook.EntitySets.Command) {\n            context.sql += \"\" + expression.value + \"\";\n        } else if (expression.value instanceof _core2.default.Queryable) {\n            context.sql += '(' + expression.value.toTraceString().queryText + ')';\n        } else {\n            var expressionValueType = _core.Container.resolveType(expression.type);\n            if (this.provider.supportedDataTypes.indexOf(expressionValueType) != -1) context.sql += this.provider.fieldConverter.toDb[_core.Container.resolveName(expressionValueType)](expression.value);else {\n                context.sql += \"\" + expression.value + \"\";\n            }\n        }\n    },\n\n    VisitParametricQueryExpression: function VisitParametricQueryExpression(expression, context) {\n        var exp = this.Visit(expression.expression, context);\n        context.parameters = expression.parameters;\n    },\n\n    VisitEntitySetExpression: function VisitEntitySetExpression(expression, context) {\n        context.tableName = expression.instance.tableName;\n    },\n\n    VisitObjectLiteralExpression: function VisitObjectLiteralExpression(expression, context) {\n        var self = this;\n        context.selectFields = context.selectFields || [];\n        expression.members.forEach(function (member) {\n            if (member.expression instanceof _core2.default.Expressions.ObjectLiteralExpression) {\n                context.mappingPrefix = context.mappingPrefix || [];\n                context.mappingPrefix.push(member.fieldName);\n                self.Visit(member, context);\n                context.mappingPrefix.pop();\n            } else {\n                if (context.selectFields.length > 0) context.sql += ', ';\n\n                self.Visit(member, context);\n                var toProperty = context.mappingPrefix instanceof Array ? context.mappingPrefix.join('.') + '.' + member.fieldName : member.fieldName;\n                context.selectFields.push({ from: context.fieldData.name, to: toProperty, dataType: context.fieldData.dataType });\n            }\n        });\n    },\n    VisitObjectFieldExpression: function VisitObjectFieldExpression(expression, context) {\n        return this.Visit(expression.expression, context);\n    },\n\n    VisitEntityFieldOperationExpression: function VisitEntityFieldOperationExpression(expression, context) {\n        _core.Guard.requireType(\"expression.operation\", expression.operation, _core2.default.Expressions.MemberInfoExpression);\n\n        var opDef = expression.operation.memberDefinition;\n        var opName = opDef.mapTo || opDef.name;\n\n        context.sql += '(';\n\n        if (opDef.expressionInParameter == false) this.Visit(expression.source, context);\n\n        context.sql += opName;\n        context.sql += \"(\";\n        var paramCounter = 0;\n        var params = opDef.parameters || [];\n\n        var args = params.map(function (item, index) {\n            var result = { dataType: item.dataType };\n            if (item.value) {\n                result.value = item.value;\n            } else if (item.name === \"@expression\") {\n                result.value = expression.source;\n            } else {\n                result.value = expression.parameters[paramCounter];\n                result.itemType = expression.parameters[paramCounter++].type;\n            };\n            return result;\n        });\n\n        args.forEach(function (arg, index) {\n            var itemType = arg.itemType ? _core.Container.resolveType(arg.itemType) : null;\n            if (!itemType || arg.dataType instanceof Array && arg.dataType.indexOf(itemType) != -1 || arg.dataType == itemType) {\n                if (index > 0) {\n                    context.sql += \", \";\n                };\n\n                if (context.type == 'Projection') context.fieldOperation = true;\n\n                this.Visit(arg.value, context);\n\n                if (context.type == 'Projection') context.fieldOperation = undefined;\n            } else _core.Guard.raise(new _core.Exception(arg.dataType + \" not allowed in '\" + expression.operation.memberName + \"' statement\", \"invalid operation\"));\n        }, this);\n\n        if (context.fieldData && context.fieldData.name) context.fieldData.name = 'anon';\n\n        if (opDef.rigthValue) context.sql += opDef.rigthValue;else context.sql += \")\";\n\n        context.sql += ')';\n    }\n}, null);\n\n},{\"jaydata/core\":\"jaydata/core\"}],6:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_core2.default.FacebookConverter = {\n    fromDb: {\n        '$data.Byte': _core2.default.Container.proxyConverter,\n        '$data.SByte': _core2.default.Container.proxyConverter,\n        '$data.Decimal': _core2.default.Container.proxyConverter,\n        '$data.Float': _core2.default.Container.proxyConverter,\n        '$data.Int16': _core2.default.Container.proxyConverter,\n        '$data.Int64': _core2.default.Container.proxyConverter,\n        '$data.Number': _core2.default.Container.proxyConverter,\n        '$data.Integer': _core2.default.Container.proxyConverter,\n        '$data.String': _core2.default.Container.proxyConverter,\n        '$data.Date': function $dataDate(value) {\n            return new Date(typeof value === \"string\" ? parseInt(value) : value);\n        },\n        '$data.Boolean': function $dataBoolean(value) {\n            return !!value;\n        },\n        '$data.Blob': _core2.default.Container.proxyConverter,\n        '$data.Array': function $dataArray(value) {\n            if (value === undefined) {\n                return new _core2.default.Array();\n            }return value;\n        }\n    },\n    toDb: {\n        '$data.Byte': _core2.default.Container.proxyConverter,\n        '$data.SByte': _core2.default.Container.proxyConverter,\n        '$data.Decimal': _core2.default.Container.proxyConverter,\n        '$data.Float': _core2.default.Container.proxyConverter,\n        '$data.Int16': _core2.default.Container.proxyConverter,\n        '$data.Int64': _core2.default.Container.proxyConverter,\n        '$data.Number': _core2.default.Container.proxyConverter,\n        '$data.Integer': _core2.default.Container.proxyConverter,\n        '$data.String': function $dataString(value) {\n            return \"'\" + value + \"'\";\n        },\n        '$data.Date': function $dataDate(value) {\n            return value ? value.valueOf() : null;\n        },\n        '$data.Boolean': _core2.default.Container.proxyConverter,\n        '$data.Blob': _core2.default.Container.proxyConverter,\n        '$data.Array': function $dataArray(value) {\n            return '(' + value.join(', ') + ')';\n        }\n    }\n};\n\n},{\"jaydata/core\":\"jaydata/core\"}],7:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_core2.default.Class.define('$data.storageProviders.Facebook.FacebookProvider', _core2.default.StorageProviderBase, null, {\n    constructor: function constructor(cfg) {\n        var provider = this;\n        this.SqlCommands = [];\n        this.context = {};\n        this.providerConfiguration = _core2.default.typeSystem.extend({\n            FQLFormat: \"format=json\",\n            FQLQueryUrl: \"https://graph.facebook.com/fql?q=\",\n            Access_Token: ''\n        }, cfg);\n        this.initializeStore = function (callBack) {\n            callBack = _core2.default.PromiseHandlerBase.createCallbackSettings(callBack);\n            callBack.success(this.context);\n        };\n    },\n    AuthenticationProvider: { dataType: '$data.Authentication.AuthenticationBase', enumerable: false },\n    supportedDataTypes: { value: [_core2.default.Integer, _core2.default.Number, _core2.default.Date, _core2.default.String, _core2.default.Boolean, _core2.default.Blob, _core2.default.Array], writable: false },\n    supportedFieldOperations: {\n        value: {\n            'contains': {\n                dataType: _core2.default.String,\n                allowedIn: _core2.default.Expressions.FilterExpression,\n                mapTo: \"strpos\",\n                parameters: [{ name: \"@expression\", dataType: _core2.default.String }, { name: \"strFragment\", dataType: _core2.default.String }],\n                rigthValue: ') >= 0'\n            },\n            'startsWith': {\n                dataType: _core2.default.String,\n                allowedIn: _core2.default.Expressions.FilterExpression,\n                mapTo: \"strpos\",\n                parameters: [{ name: \"@expression\", dataType: _core2.default.String }, { name: \"strFragment\", dataType: _core2.default.String }],\n                rigthValue: ') = 0'\n            },\n            'strpos': {\n                dataType: _core2.default.Integer,\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.ProjectionExpression],\n                mapTo: \"strpos\",\n                parameters: [{ name: \"@expression\", dataType: _core2.default.String }, { name: \"strFragment\", dataType: _core2.default.String }]\n            },\n            'substr': {\n                dataType: _core2.default.String,\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.ProjectionExpression],\n                mapTo: \"substr\",\n                parameters: [{ name: \"@expression\", dataType: _core2.default.String }, { name: \"startIdx\", dataType: _core2.default.Number }, { name: \"length\", dataType: _core2.default.Number }]\n            },\n            'strlen': {\n                dataType: _core2.default.Integer,\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.ProjectionExpression],\n                mapTo: \"strlen\",\n                parameters: [{ name: \"@expression\", dataType: _core2.default.String }]\n            }\n\n        },\n        enumerable: true,\n        writable: true\n    },\n    supportedBinaryOperators: {\n        value: {\n            equal: { mapTo: ' = ', dataType: _core2.default.Boolean, allowedIn: _core2.default.Expressions.FilterExpression },\n            notEqual: { mapTo: ' != ', dataType: _core2.default.Boolean, allowedIn: _core2.default.Expressions.FilterExpression },\n            equalTyped: { mapTo: ' = ', dataType: _core2.default.Boolean, allowedIn: _core2.default.Expressions.FilterExpression },\n            notEqualTyped: { mapTo: ' != ', dataType: _core2.default.Boolean, allowedIn: _core2.default.Expressions.FilterExpression },\n            greaterThan: { mapTo: ' > ', dataType: _core2.default.Boolean, allowedIn: _core2.default.Expressions.FilterExpression },\n            greaterThanOrEqual: { mapTo: ' >= ', dataType: _core2.default.Boolean, allowedIn: _core2.default.Expressions.FilterExpression },\n\n            lessThan: { mapTo: ' < ', dataType: _core2.default.Boolean, allowedIn: _core2.default.Expressions.FilterExpression },\n            lessThenOrEqual: { mapTo: ' <= ', dataType: _core2.default.Boolean, allowedIn: _core2.default.Expressions.FilterExpression },\n            or: { mapTo: ' OR ', dataType: _core2.default.Boolean, allowedIn: _core2.default.Expressions.FilterExpression },\n            and: { mapTo: ' AND ', dataType: _core2.default.Booleanv },\n            'in': { mapTo: ' IN ', dataType: _core2.default.Boolean, resolvableType: [_core2.default.Array, _core2.default.Queryable], allowedIn: _core2.default.Expressions.FilterExpression }\n        }\n    },\n    supportedUnaryOperators: {\n        value: {}\n    },\n    fieldConverter: { value: _core2.default.FacebookConverter },\n    supportedSetOperations: {\n        value: {\n            filter: {},\n            length: {},\n            map: {},\n            forEach: {},\n            toArray: {},\n            single: {},\n            take: {},\n            skip: {},\n            orderBy: {},\n            orderByDescending: {},\n            first: {}\n        },\n        enumerable: true,\n        writable: true\n    },\n    executeQuery: function executeQuery(query, callBack) {\n        callBack = _core2.default.PromiseHandlerBase.createCallbackSettings(callBack);\n\n        if (!this.AuthenticationProvider) this.AuthenticationProvider = new _core2.default.Authentication.Anonymous({});\n\n        var sql;\n        try {\n            sql = this._compile(query);\n        } catch (e) {\n            callBack.error(e);\n            return;\n        }\n\n        var schema = query.defaultType;\n        var ctx = this.context;\n\n        var includes = [];\n        if (!sql.selectMapping) this._discoverType('', schema, includes);\n\n        var requestUrl = this.providerConfiguration.FQLQueryUrl + encodeURIComponent(sql.queryText) + \"&\" + this.providerConfiguration.FQLFormat;\n        if (this.providerConfiguration.Access_Token) {\n            requestUrl += '&access_token=' + this.providerConfiguration.Access_Token;\n        }\n\n        var requestData = {\n            url: requestUrl,\n            dataType: \"JSON\",\n            success: function success(data, textStatus, jqXHR) {\n                query.rawDataList = data.data;\n                var compiler = _core.Container.createModelBinderConfigCompiler(query, []);\n                compiler.Visit(query.expression);\n\n                if (query.expression instanceof _core2.default.Expressions.CountExpression) {\n                    query.rawDataList = [{ cnt: data.data.length }];\n                }\n                callBack.success(query);\n            },\n            error: function error(jqXHR, textStatus, errorThrow) {\n                var errorData = {};\n                try {\n                    errorData = JSON.parse(jqXHR.responseText).error;\n                } catch (e) {\n                    errorData = errorThrow + ': ' + jqXHR.responseText;\n                }\n                callBack.error(errorData);\n            }\n        };\n\n        this.context.prepareRequest.call(this, requestData);\n        this.AuthenticationProvider.CreateRequest(requestData);\n    },\n    _discoverType: function _discoverType(dept, type, result) {\n        type.memberDefinitions.getPublicMappedProperties().forEach(function (memDef) {\n            var type = _core.Container.resolveType(memDef.dataType);\n\n            if (type.isAssignableTo || type == Array) {\n                var name = dept ? dept + '.' + memDef.name : memDef.name;\n\n                if (type == Array || type.isAssignableTo(_core2.default.EntitySet)) {\n                    if (memDef.inverseProperty) type = _core.Container.resolveType(memDef.elementType);else return;\n                }\n\n                result.push({ name: name, type: type });\n                this._discoverType(name, type, result);\n            }\n        }, this);\n    },\n    _compile: function _compile(query) {\n        var sqlText = _core.Container.createFacebookCompiler().compile(query);\n        return sqlText;\n    },\n    getTraceString: function getTraceString(query) {\n        if (!this.AuthenticationProvider) this.AuthenticationProvider = new _core2.default.Authentication.Anonymous({});\n\n        var sqlText = this._compile(query);\n        return sqlText;\n    },\n    setContext: function setContext(ctx) {\n        this.context = ctx;\n    },\n    saveChanges: function saveChanges(callBack) {\n        _core.Guard.raise(new _core.Exception(\"Not implemented\", \"Not implemented\"));\n    }\n}, null);\n\n_core2.default.StorageProviderBase.registerProvider(\"Facebook\", _core2.default.storageProviders.Facebook.FacebookProvider);\n\n},{\"jaydata/core\":\"jaydata/core\"}],8:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _FacebookConverter = _dereq_('./FacebookConverter.js');\n\nvar _FacebookConverter2 = _interopRequireDefault(_FacebookConverter);\n\nvar _FacebookProvider = _dereq_('./FacebookProvider.js');\n\nvar _FacebookProvider2 = _interopRequireDefault(_FacebookProvider);\n\nvar _FacebookCompiler = _dereq_('./FacebookCompiler.js');\n\nvar _FacebookCompiler2 = _interopRequireDefault(_FacebookCompiler);\n\nvar _user = _dereq_('./EntitySets/FQL/user.js');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _friend = _dereq_('./EntitySets/FQL/friend.js');\n\nvar _friend2 = _interopRequireDefault(_friend);\n\nvar _page = _dereq_('./EntitySets/FQL/page.js');\n\nvar _page2 = _interopRequireDefault(_page);\n\nvar _FQLContext = _dereq_('./EntitySets/FQLContext.js');\n\nvar _FQLContext2 = _interopRequireDefault(_FQLContext);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _core2.default;\nmodule.exports = exports['default'];\n\n},{\"./EntitySets/FQL/friend.js\":2,\"./EntitySets/FQL/page.js\":3,\"./EntitySets/FQL/user.js\":4,\"./EntitySets/FQLContext.js\":1,\"./FacebookCompiler.js\":5,\"./FacebookConverter.js\":6,\"./FacebookProvider.js\":7,\"jaydata/core\":\"jaydata/core\"}]},{},[8])(8)\n});\n\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$data.Class.define('$data.storageProviders.Facebook.EntitySets.Command', null, null, {\r\n    constructor: function (cfg) {\r\n        this.Config = $data.typeSystem.extend({\r\n            CommandValue: \"\"\r\n        }, cfg);\r\n    },\r\n    toString: function () {\r\n        return this.Config.CommandValue;\r\n    },\r\n    Config: {}\r\n}, {\r\n    'to$data.Integer': function (value) {\r\n        return value;\r\n    },\r\n    'to$data.Number': function (value) {\r\n        return value;\r\n    }\r\n});\r\n\r\n$data.Class.define(\"$data.Facebook.FQLContext\", $data.EntityContext, null, {\r\n    constructor: function(){\r\n        var friendsQuery = this.Friends\r\n                .where(function (f) { return f.uid1 == this.me; }, { me: $data.Facebook.FQLCommands.me })\r\n                .select(function (f) { return f.uid2; });\r\n\r\n        this.MyFriends = this.Users\r\n                .where(function (u) { return u.uid in this.friends; }, { friends: friendsQuery });\r\n    },\r\n    Users: {\r\n        dataType: $data.EntitySet,\r\n        tableName: 'user',\r\n        elementType: $data.Facebook.types.FbUser\r\n    },\r\n    Friends: {\r\n        dataType: $data.EntitySet,\r\n        tableName: 'friend',\r\n        elementType: $data.Facebook.types.FbFriend\r\n    },\r\n    Pages: {\r\n        dataType: $data.EntitySet,\r\n        tableName: 'page',\r\n        elementType: $data.Facebook.types.FbPage\r\n    }\r\n}, null);\r\n\r\n$data.Facebook.FQLCommands = {\r\n    __namespace: true,\r\n    me: new $data.storageProviders.Facebook.EntitySets.Command({ CommandValue: \"me()\" }),\r\n    now: new $data.storageProviders.Facebook.EntitySets.Command({ CommandValue: \"now()\" })\r\n};\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n\r\n$data.Class.define(\"$data.Facebook.types.FbFriend\", $data.Entity, null, {\r\n    uid1: { type: \"number\", key: true, searchable: true },\r\n    uid2: { type: \"number\", key: true, searchable: true }\r\n}, null);\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$data.Class.define(\"$data.Facebook.types.FbPage\", $data.Entity, null, {\r\n    page_id: { type: \"number\", key: true, isPublic: true, searchable: true },\r\n    name: { type: \"string\", isPublic: true, searchable: true },\r\n    username: { type: \"string\", isPublic: true, searchable: true },\r\n    description: { type: \"string\", isPublic: true },\r\n    categories: { type: \"array\", isPublic: true },\t//array\tThe categories\r\n    is_community_page: { type: \"bool\", isPublic: true },\t//string\tIndicates whether the Page is a community Page.\r\n    pic_small: { type: \"string\", isPublic: true },\r\n    pic_big: { type: \"string\", isPublic: true },\r\n    pic_square: { type: \"string\", isPublic: true },\r\n    pic: { type: \"string\", isPublic: true },\r\n    pic_large: { type: \"string\", isPublic: true },\r\n    pic_cover: { type: \"object\", isPublic: true },\t//object\tThe JSON object containing three fields:�cover_id�(the ID of the cover photo),�source�(the URL for the cover photo), andoffset_y�(indicating percentage offset from top [0-100])\r\n    unread_notif_count: { type: \"number\", isPublic: false },\r\n    new_like_count: { type: \"number\", isPublic: false },\r\n    fan_count: { type: \"number\", isPublic: true },\r\n    type: { type: \"string\", isPublic: true },\r\n    website: { type: \"string\", isPublic: true },\r\n    has_added_app: { type: \"bool\", isPublic: true },\r\n    general_info: { type: \"string\", isPublic: true },\r\n    can_post: { type: \"bool\", isPublic: true },\r\n    checkins: { type: \"number\", isPublic: true },\r\n    is_published: { type: \"bool\", isPublic: true },\r\n    founded: { type: \"string\", isPublic: true },\r\n    company_overview: { type: \"string\", isPublic: true },\r\n    mission: { type: \"string\", isPublic: true },\r\n    products: { type: \"string\", isPublic: true },\r\n    location: { type: \"object\", isPublic: true }, //\tarray\tApplicable to all�Places.\r\n    parking: { type: \"object\", isPublic: true }, //     array\tApplicable to�Businesses�and�Places. Can be one of�street,�lot�orvalet\r\n    hours: { type: \"array\", isPublic: true }, //\tarray\tApplicable to�Businesses�and�Places.\r\n    pharma_safety_info: { type: \"string\", isPublic: true },\r\n    public_transit: { type: \"string\", isPublic: true },\r\n    attire: { type: \"string\", isPublic: true },\r\n    payment_options: { type: \"object\", isPublic: true },\t//array\tApplicable to�Restaurants�or�Nightlife.\r\n    culinary_team: { type: \"string\", isPublic: true },\r\n    general_manager: { type: \"string\", isPublic: true },\r\n    price_range: { type: \"string\", isPublic: true },\r\n    restaurant_services: { type: \"object\", isPublic: true },//\tarray\tApplicable to�Restaurants.\r\n    restaurant_specialties: { type: \"object\", isPublic: true },//\tarray\tApplicable to�Restaurants.\r\n    phone: { type: \"string\", isPublic: true },\r\n    release_date: { type: \"string\", isPublic: true },\r\n    genre: { type: \"string\", isPublic: true },\r\n    starring: { type: \"string\", isPublic: true },\r\n    screenplay_by: { type: \"string\", isPublic: true },\r\n    directed_by: { type: \"string\", isPublic: true },\r\n    produced_by: { type: \"string\", isPublic: true },\r\n    studio: { type: \"string\", isPublic: true },\r\n    awards: { type: \"string\", isPublic: true },\r\n    plot_outline: { type: \"string\", isPublic: true },\r\n    season: { type: \"string\", isPublic: true },\r\n    network: { type: \"string\", isPublic: true },\r\n    schedule: { type: \"string\", isPublic: true },\r\n    written_by: { type: \"string\", isPublic: true },\r\n    band_members: { type: \"string\", isPublic: true },\r\n    hometown: { type: \"string\", isPublic: true },\r\n    current_location: { type: \"string\", isPublic: true },\r\n    record_label: { type: \"string\", isPublic: true },\r\n    booking_agent: { type: \"string\", isPublic: true },\r\n    press_contact: { type: \"string\", isPublic: true },\r\n    artists_we_like: { type: \"string\", isPublic: true },\r\n    influences: { type: \"string\", isPublic: true },\r\n    band_interests: { type: \"string\", isPublic: true },\r\n    bio: { type: \"string\", isPublic: true },\r\n    affiliation: { type: \"string\", isPublic: true },\r\n    birthday: { type: \"string\", isPublic: true },\r\n    personal_info: { type: \"string\", isPublic: true },\r\n    personal_interests: { type: \"string\", isPublic: true },\r\n    built: { type: \"string\", isPublic: true },\r\n    features: { type: \"string\", isPublic: true },\r\n    mpg: { type: \"string\", isPublic: true }\r\n}, null);\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n\r\n$data.Class.define(\"$data.Facebook.types.FbUser\", $data.Entity, null, {\r\n    uid: { type: \"number\", key: true, isPublic: true, searchable: true },\r\n    username: { type: \"string\", isPublic: true, searchable: true },\r\n    first_name: { type: \"string\", isPublic: true },\r\n    middle_name: { type: \"string\", isPublic: true },\r\n    last_name: { type: \"string\", isPublic: true },\r\n    name: { type: \"string\", isPublic: true, searchable: true },\r\n    pic_small: { type: \"string\" },\r\n    pic_big: { type: \"string\" },\r\n    pic_square: { type: \"string\" },\r\n    pic: { type: \"string\" },\r\n    affiliations: { type: \"Array\", elementType: \"Object\" },\r\n    profile_update_time: { type: \"datetime\" },\r\n    timezone: { type: \"number\" },\r\n    religion: { type: \"string\" },\r\n    birthday: { type: \"string\" },\r\n    birthday_date: { type: \"string\" },\r\n    sex: { type: \"string\", isPublic: true },\r\n    hometown_location: { type: \"Array\", elementType: \"Object\" },\r\n    meeting_sex: { type: \"Array\", elementType: \"Object\" },\r\n    meeting_for: { type: \"Array\", elementType: \"Object\" },\r\n    relationship_status: { type: \"string\" },\r\n    significant_other_id: { type: \"number\" /*uid*/ },\r\n    political: { type: \"string\" },\r\n    current_location: { type: \"Array\", elementType: \"Object\" },\r\n    activities: { type: \"string\" },\r\n    interests: { type: \"string\" },\r\n    is_app_user: { type: \"bool\" },\r\n    music: { type: \"string\" },\r\n    tv: { type: \"string\" },\r\n    movies: { type: \"string\" },\r\n    books: { type: \"string\" },\r\n    quotes: { type: \"string\" },\r\n    about_me: { type: \"string\" },\r\n    hs_info: { type: \"Array\", elementType: \"Object\" },\r\n    education_history: { type: \"Array\", elementType: \"Object\" },\r\n    work_history: { type: \"Array\", elementType: \"Object\" },\r\n    notes_count: { type: \"number\" },\r\n    wall_count: { type: \"number\" },\r\n    status: { type: \"string\" },\r\n    has_added_app: { type: \"bool\" },\r\n    online_presence: { type: \"string\" },\r\n    locale: { type: \"string\", isPublic: true },\r\n    proxied_email: { type: \"string\" },\r\n    profile_url: { type: \"string\" },\r\n    email_hashes: { type: \"Array\", elementType: \"Object\" },\r\n    pic_small_with_logo: { type: \"string\", isPublic: true },\r\n    pic_big_with_logo: { type: \"string\", isPublic: true },\r\n    pic_square_with_logo: { type: \"string\", isPublic: true },\r\n    pic_with_logo: { type: \"string\", isPublic: true },\r\n    allowed_restrictions: { type: \"string\" },\r\n    verified: { type: \"bool\" },\r\n    profile_blurb: { type: \"string\" },\r\n    family: { type: \"Array\", elementType: \"Object\" },\r\n    website: { type: \"string\" },\r\n    is_blocked: { type: \"bool\" },\r\n    contact_email: { type: \"string\" },\r\n    email: { type: \"string\" },\r\n    third_party_id: { type: \"string\", searchable: true },\r\n    name_format: { type: \"string\" },\r\n    video_upload_limits: { type: \"Array\", elementType: \"Object\" },\r\n    games: { type: \"string\" },\r\n    work: { type: \"Array\", elementType: \"Object\" },\r\n    education: { type: \"Array\", elementType: \"Object\" },\r\n    sports: { type: \"Array\", elementType: \"Object\" },\r\n    favorite_athletes: { type: \"Array\", elementType: \"Object\" },\r\n    favorite_teams: { type: \"Array\", elementType: \"Object\" },\r\n    inspirational_people: { type: \"Array\", elementType: \"Object\" },\r\n    languages: { type: \"Array\", elementType: \"Object\" },\r\n    likes_count: { type: \"number\" },\r\n    friend_count: { type: \"number\" },\r\n    mutual_friend_count: { type: \"number\" },\r\n    can_post: { type: \"bool\" }\r\n}, null)\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n//\"use strict\";\t// suspicious code\r\n\r\n$C('$data.storageProviders.Facebook.FacebookCompiler', $data.Expressions.EntityExpressionVisitor, null, {\r\n    constructor: function () {\r\n        this.provider = {};\r\n    },\r\n\r\n    compile: function (query) {\r\n        this.provider = query.context.storageProvider;\r\n\r\n        var context = {\r\n            filterSql: { sql: '' },\r\n            projectionSql: { sql: '' },\r\n            orderSql: { sql: '' },\r\n            skipSql: { sql: '' },\r\n            takeSql: { sql: '' },\r\n            tableName: ''\r\n        };\r\n        this.Visit(query.expression, context);\r\n\r\n        var autoGeneratedSelect = false;\r\n        if (!context.projectionSql.sql) {\r\n            context.projectionSql = this.autoGenerateProjection(query);\r\n            autoGeneratedSelect = true;\r\n        }\r\n\r\n        if (context.filterSql.sql == '')\r\n            Guard.raise(new Exception('Filter/where statement is required', 'invalid operation'));\r\n\r\n        return {\r\n            queryText: context.projectionSql.sql + ' FROM ' + context.tableName +\r\n                context.filterSql.sql +\r\n                context.orderSql.sql +\r\n                context.takeSql.sql +\r\n                (context.takeSql.sql ? context.skipSql.sql : ''),\r\n            selectMapping: autoGeneratedSelect == false ? context.projectionSql.selectFields : null,\r\n            params: []\r\n        };\r\n\r\n    },\r\n\r\n    autoGenerateProjection: function (query) {\r\n        var entitySet = query.context.getEntitySetFromElementType(query.defaultType);\r\n        var newQueryable = new $data.Queryable(query.context, entitySet.expression);\r\n        //newQueryable._checkRootExpression(entitySet.collectionName);\r\n        var codeExpression = Container.createCodeExpression(this.generateProjectionFunc(query));\r\n        var exp = Container.createProjectionExpression(newQueryable.expression, codeExpression);\r\n        var q = Container.createQueryable(newQueryable, exp);\r\n\r\n        var expression = q.expression;\r\n        var preparator = Container.createQueryExpressionCreator(query.context);\r\n        expression = preparator.Visit(expression);\r\n\r\n        var databaseQuery = {\r\n            projectionSql: { sql: '' }\r\n        };\r\n        this.Visit(expression, databaseQuery);\r\n\r\n        return databaseQuery.projectionSql;\r\n    },\r\n    generateProjectionFunc: function (query) {\r\n        var isAuthenticated = this.provider.AuthenticationProvider.Authenticated || this.provider.providerConfiguration.Access_Token;\r\n        var publicMemberDefinitions = query.defaultType.memberDefinitions.getPublicMappedProperties();\r\n        if (!isAuthenticated && publicMemberDefinitions.some(function (memDef) { return memDef.isPublic == true; })) {\r\n            publicMemberDefinitions = publicMemberDefinitions.filter(function (memDef) { return memDef.isPublic == true; });\r\n        }\r\n\r\n        var selectStr = 'function (s){ return {';\r\n        publicMemberDefinitions.forEach(function (memDef, i) {\r\n            if (i != 0) selectStr += ', ';\r\n            selectStr += memDef.name + ': s.' + memDef.name;\r\n        });\r\n        selectStr += '}; }';\r\n\r\n        //var projectionFunc = null;\r\n        //eval(selectStr);\r\n        return selectStr;\r\n    },\r\n\r\n    VisitFilterExpression: function (expression, context) {\r\n        ///<param name=\"expression\" type=\"$data.Expressions.FilterExpression\" />\r\n        this.Visit(expression.source, context);\r\n\r\n        context.filterSql.type = expression.nodeType;\r\n        if (context.filterSql.sql == '')\r\n            context.filterSql.sql = ' WHERE ';\r\n        else\r\n            context.filterSql.sql += ' AND ';\r\n\r\n        this.Visit(expression.selector, context.filterSql);\r\n    },\r\n    VisitProjectionExpression: function (expression, context) {\r\n        ///<param name=\"expression\" type=\"$data.Expressions.ProjectionExpression\" />\r\n        this.Visit(expression.source, context);\r\n\r\n        context.projectionSql.type = expression.nodeType;\r\n        if (context.projectionSql.sql == '')\r\n            context.projectionSql.sql = 'SELECT ';\r\n        else\r\n            Guard.raise(new Exception('Multiple select error'));\r\n\r\n        this.Visit(expression.selector, context.projectionSql);\r\n    },\r\n    VisitOrderExpression: function (expression, context) {\r\n        ///<param name=\"expression\" type=\"$data.Expressions.OrderExpression\" />\r\n        this.Visit(expression.source, context);\r\n\r\n        context.orderSql.type = expression.nodeType;\r\n        if (context.orderSql.sql == '')\r\n            context.orderSql.sql = ' ORDER BY ';\r\n        else\r\n            Guard.raise(new Exception('Multiple sorting not supported', 'not supported'));\r\n\r\n        this.Visit(expression.selector, context.orderSql);\r\n        context.orderSql.sql += expression.nodeType == $data.Expressions.ExpressionType.OrderByDescending ? \" DESC\" : \" ASC\";\r\n    },\r\n    VisitPagingExpression: function (expression, context) {\r\n        ///<param name=\"expression\" type=\"$data.Expressions.PagingExpression\" />\r\n        this.Visit(expression.source, context);\r\n\r\n        if (expression.nodeType == $data.Expressions.ExpressionType.Skip) {\r\n            context.skipSql.type = expression.nodeType;\r\n            context.skipSql.sql = ' OFFSET ';\r\n            this.Visit(expression.amount, context.skipSql);\r\n        }\r\n        else if (expression.nodeType == $data.Expressions.ExpressionType.Take) {\r\n            context.takeSql.type = expression.nodeType;\r\n            context.takeSql.sql = ' LIMIT ';\r\n            this.Visit(expression.amount, context.takeSql);\r\n        }\r\n    },\r\n\r\n    VisitSimpleBinaryExpression: function (expression, context) {\r\n        context.sql += \"(\";\r\n        var left = this.Visit(expression.left, context);\r\n        context.sql += expression.resolution.mapTo;\r\n\r\n        if (expression.resolution.resolvableType &&\r\n            !Guard.requireType(expression.resolution.mapTo + ' expression.right.value', expression.right.value, expression.resolution.resolvableType)) {\r\n                Guard.raise(new Exception(expression.right.type + \" not allowed in '\" + expression.resolution.mapTo + \"' statement\", \"invalid operation\"));\r\n            }\r\n\r\n        if (expression.resolution.name === 'in' && expression.right.value instanceof Array) {\r\n            var self = this;\r\n            context.sql += \"(\";\r\n            expression.right.value.forEach(function (item, i) {\r\n                if (i > 0) context.sql += \", \";\r\n                self.Visit(item, context);\r\n            });\r\n            context.sql += \")\";\r\n        } else {\r\n            var right = this.Visit(expression.right, context);\r\n        }\r\n        context.sql += \")\";\r\n    },\r\n\r\n    VisitEntityFieldExpression: function (expression, context) {\r\n        var source = this.Visit(expression.selector, context);\r\n    },\r\n    VisitMemberInfoExpression: function (expression, context) {\r\n        var memberName = expression.memberName;\r\n        context.sql += memberName;\r\n        //context.fieldName = memberName;\r\n        context.fieldData = { name: memberName, dataType: expression.memberDefinition.dataType };\r\n\r\n        if (context.type == 'Projection' && !context.selectFields) {\r\n            if (context.fieldOperation === true)\r\n                context.selectFields = [{ from: 'anon' }];\r\n            else\r\n                context.selectFields = [{ from: memberName, dataType: expression.memberDefinition.dataType }];\r\n        }\r\n    },\r\n\r\n    VisitConstantExpression: function (expression, context) {\r\n        if (context.type == 'Projection')\r\n            Guard.raise(new Exception('Constant value is not supported in Projection.', 'Not supported!'));\r\n\r\n        this.VisitQueryParameterExpression(expression, context);\r\n    },\r\n\r\n    VisitQueryParameterExpression: function (expression, context) {\r\n        if (expression.value instanceof $data.storageProviders.Facebook.EntitySets.Command) {\r\n            context.sql += \"\" + expression.value + \"\";\r\n        } else if (expression.value instanceof $data.Queryable) {\r\n            context.sql += '(' + expression.value.toTraceString().queryText + ')';\r\n        } else {\r\n            var expressionValueType = Container.resolveType(expression.type);\r\n            if (this.provider.supportedDataTypes.indexOf(expressionValueType) != -1)\r\n                context.sql += this.provider.fieldConverter.toDb[Container.resolveName(expressionValueType)](expression.value);\r\n            else {\r\n              context.sql += \"\" + expression.value + \"\";\r\n            }\r\n        }\r\n    },\r\n\r\n    VisitParametricQueryExpression: function (expression, context) {\r\n        var exp = this.Visit(expression.expression, context);\r\n        context.parameters = expression.parameters;\r\n    },\r\n\r\n    VisitEntitySetExpression: function (expression, context) {\r\n        context.tableName = expression.instance.tableName;\r\n    },\r\n\r\n    VisitObjectLiteralExpression: function (expression, context) {\r\n        var self = this;\r\n        context.selectFields = context.selectFields || [];\r\n        expression.members.forEach(function (member) {\r\n            if (member.expression instanceof $data.Expressions.ObjectLiteralExpression) {\r\n                context.mappingPrefix = context.mappingPrefix || [];\r\n                context.mappingPrefix.push(member.fieldName);\r\n                self.Visit(member, context);\r\n                context.mappingPrefix.pop();\r\n            }\r\n            else {\r\n                if (context.selectFields.length > 0)\r\n                    context.sql += ', ';\r\n\r\n                self.Visit(member, context);\r\n                var toProperty = context.mappingPrefix instanceof Array ? context.mappingPrefix.join('.') + '.' + member.fieldName : member.fieldName;\r\n                context.selectFields.push({ from: context.fieldData.name, to: toProperty, dataType: context.fieldData.dataType });\r\n            }\r\n        });\r\n    },\r\n    VisitObjectFieldExpression: function (expression, context) {\r\n        return this.Visit(expression.expression, context);\r\n    },\r\n\r\n    VisitEntityFieldOperationExpression: function (expression, context) {\r\n        Guard.requireType(\"expression.operation\", expression.operation, $data.Expressions.MemberInfoExpression);\r\n\r\n        var opDef = expression.operation.memberDefinition;\r\n        var opName = opDef.mapTo || opDef.name;\r\n\r\n        context.sql += '(';\r\n\r\n        if (opDef.expressionInParameter == false)\r\n            this.Visit(expression.source, context);\r\n\r\n        context.sql += opName;\r\n        context.sql += \"(\";\r\n        var paramCounter = 0;\r\n        var params = opDef.parameters || [];\r\n\r\n        var args = params.map(function (item, index) {\r\n            var result = { dataType: item.dataType };\r\n            if (item.value) {\r\n                result.value = item.value;\r\n            } else if (item.name === \"@expression\") {\r\n                result.value = expression.source;\r\n            } else {\r\n                result.value = expression.parameters[paramCounter];\r\n                result.itemType = expression.parameters[paramCounter++].type;\r\n            };\r\n            return result;\r\n        });\r\n\r\n        args.forEach(function (arg, index) {\r\n            var itemType = arg.itemType ? Container.resolveType(arg.itemType) : null;\r\n            if (!itemType || ((arg.dataType instanceof Array && arg.dataType.indexOf(itemType) != -1) || arg.dataType == itemType)) {\r\n                if (index > 0) {\r\n                    context.sql += \", \";\r\n                };\r\n\r\n                if (context.type == 'Projection')\r\n                    context.fieldOperation = true;\r\n\r\n                this.Visit(arg.value, context);\r\n\r\n                if (context.type == 'Projection')\r\n                    context.fieldOperation = undefined;\r\n\r\n            } else\r\n                Guard.raise(new Exception(arg.dataType + \" not allowed in '\" + expression.operation.memberName + \"' statement\", \"invalid operation\"));\r\n        }, this);\r\n\r\n        if (context.fieldData && context.fieldData.name)\r\n            context.fieldData.name = 'anon';\r\n\r\n        if (opDef.rigthValue) context.sql += opDef.rigthValue;\r\n        else context.sql += \")\";\r\n\r\n        context.sql += ')';\r\n    }\r\n}, null);\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$data.FacebookConverter = {\r\n    fromDb: {\r\n        '$data.Byte': $data.Container.proxyConverter,\r\n        '$data.SByte': $data.Container.proxyConverter,\r\n        '$data.Decimal': $data.Container.proxyConverter,\r\n        '$data.Float': $data.Container.proxyConverter,\r\n        '$data.Int16': $data.Container.proxyConverter,\r\n        '$data.Int64': $data.Container.proxyConverter,\r\n        '$data.Number': $data.Container.proxyConverter,\r\n        '$data.Integer': $data.Container.proxyConverter,\r\n        '$data.String': $data.Container.proxyConverter,\r\n        '$data.Date': function (value) { return new Date(typeof value === \"string\" ? parseInt(value) : value); },\r\n        '$data.Boolean': function (value) { return !!value },\r\n        '$data.Blob': $data.Container.proxyConverter,\r\n        '$data.Array': function (value) { if (value === undefined) { return new $data.Array(); } return value; }\r\n    },\r\n    toDb: {\r\n        '$data.Byte': $data.Container.proxyConverter,\r\n        '$data.SByte': $data.Container.proxyConverter,\r\n        '$data.Decimal': $data.Container.proxyConverter,\r\n        '$data.Float': $data.Container.proxyConverter,\r\n        '$data.Int16': $data.Container.proxyConverter,\r\n        '$data.Int64': $data.Container.proxyConverter,\r\n        '$data.Number': $data.Container.proxyConverter,\r\n        '$data.Integer': $data.Container.proxyConverter,\r\n        '$data.String': function (value) { return \"'\" + value + \"'\"; },\r\n        '$data.Date': function (value) { return value ? value.valueOf() : null; },\r\n        '$data.Boolean': $data.Container.proxyConverter,\r\n        '$data.Blob': $data.Container.proxyConverter,\r\n        '$data.Array': function (value) { return '(' + value.join(', ') + ')'; }\r\n    }\r\n};\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$data.Class.define('$data.storageProviders.Facebook.FacebookProvider', $data.StorageProviderBase, null,\r\n{\r\n    constructor: function (cfg) {\r\n        var provider = this;\r\n        this.SqlCommands = [];\r\n        this.context = {};\r\n        this.providerConfiguration = $data.typeSystem.extend({\r\n            FQLFormat: \"format=json\",\r\n            FQLQueryUrl: \"https://graph.facebook.com/fql?q=\",\r\n            Access_Token: ''\r\n        }, cfg);\r\n        this.initializeStore = function (callBack) {\r\n            callBack = $data.PromiseHandlerBase.createCallbackSettings(callBack);\r\n            callBack.success(this.context);\r\n        };\r\n\r\n    },\r\n    AuthenticationProvider: { dataType: '$data.Authentication.AuthenticationBase', enumerable: false },\r\n    supportedDataTypes: { value: [$data.Integer, $data.Number, $data.Date, $data.String, $data.Boolean, $data.Blob, $data.Array], writable: false },\r\n    supportedFieldOperations: {\r\n        value: {\r\n            'contains': {\r\n                dataType: $data.String,\r\n                allowedIn: $data.Expressions.FilterExpression,\r\n                mapTo: \"strpos\",\r\n                parameters: [{ name: \"@expression\", dataType: $data.String }, { name: \"strFragment\", dataType: $data.String }],\r\n                rigthValue: ') >= 0'\r\n            },\r\n            'startsWith': {\r\n                dataType: $data.String,\r\n                allowedIn: $data.Expressions.FilterExpression,\r\n                mapTo: \"strpos\",\r\n                parameters: [{ name: \"@expression\", dataType: $data.String }, { name: \"strFragment\", dataType: $data.String }],\r\n                rigthValue: ') = 0'\r\n            },\r\n            'strpos': {\r\n                dataType: $data.Integer,\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.ProjectionExpression],\r\n                mapTo: \"strpos\",\r\n                parameters: [{ name: \"@expression\", dataType: $data.String }, { name: \"strFragment\", dataType: $data.String }]\r\n            },\r\n            'substr': {\r\n                dataType: $data.String,\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.ProjectionExpression],\r\n                mapTo: \"substr\",\r\n                parameters: [{ name: \"@expression\", dataType: $data.String }, { name: \"startIdx\", dataType: $data.Number }, { name: \"length\", dataType: $data.Number }]\r\n            },\r\n            'strlen': {\r\n                dataType: $data.Integer,\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.ProjectionExpression],\r\n                mapTo: \"strlen\",\r\n                parameters: [{ name: \"@expression\", dataType: $data.String }]\r\n            }\r\n\r\n        },\r\n        enumerable: true,\r\n        writable: true\r\n    },\r\n    supportedBinaryOperators: {\r\n        value: {\r\n            equal: { mapTo: ' = ', dataType: $data.Boolean, allowedIn: $data.Expressions.FilterExpression },\r\n            notEqual: { mapTo: ' != ', dataType: $data.Boolean, allowedIn: $data.Expressions.FilterExpression },\r\n            equalTyped: { mapTo: ' = ', dataType: $data.Boolean, allowedIn: $data.Expressions.FilterExpression },\r\n            notEqualTyped: { mapTo: ' != ', dataType: $data.Boolean, allowedIn: $data.Expressions.FilterExpression },\r\n            greaterThan: { mapTo: ' > ', dataType: $data.Boolean, allowedIn: $data.Expressions.FilterExpression },\r\n            greaterThanOrEqual: { mapTo: ' >= ', dataType: $data.Boolean, allowedIn: $data.Expressions.FilterExpression },\r\n\r\n            lessThan: { mapTo: ' < ', dataType: $data.Boolean, allowedIn: $data.Expressions.FilterExpression },\r\n            lessThenOrEqual: { mapTo: ' <= ', dataType: $data.Boolean, allowedIn: $data.Expressions.FilterExpression },\r\n            or: { mapTo: ' OR ', dataType: $data.Boolean, allowedIn: $data.Expressions.FilterExpression },\r\n            and: { mapTo: ' AND ', dataType: $data.Booleanv },\r\n            'in': { mapTo: ' IN ', dataType: $data.Boolean, resolvableType: [$data.Array, $data.Queryable], allowedIn: $data.Expressions.FilterExpression }\r\n        }\r\n    },\r\n    supportedUnaryOperators: {\r\n        value: {}\r\n    },\r\n    fieldConverter: { value: $data.FacebookConverter },\r\n    supportedSetOperations: {\r\n        value: {\r\n            filter: {},\r\n            length: {},\r\n            map: {},\r\n            forEach: {},\r\n            toArray: {},\r\n            single: {},\r\n            take: {},\r\n            skip: {},\r\n            orderBy: {},\r\n            orderByDescending: {},\r\n            first: {}\r\n        },\r\n        enumerable: true,\r\n        writable: true\r\n    },\r\n    executeQuery: function (query, callBack) {\r\n        callBack = $data.PromiseHandlerBase.createCallbackSettings(callBack);\r\n\r\n        if (!this.AuthenticationProvider)\r\n            this.AuthenticationProvider = new $data.Authentication.Anonymous({});\r\n\r\n        var sql;\r\n        try {\r\n            sql = this._compile(query);\r\n        } catch (e) {\r\n            callBack.error(e);\r\n            return;\r\n        }\r\n\r\n        var schema = query.defaultType;\r\n        var ctx = this.context;\r\n\r\n        var includes = [];\r\n        if (!sql.selectMapping)\r\n            this._discoverType('', schema, includes);\r\n\r\n        var requestUrl = this.providerConfiguration.FQLQueryUrl + encodeURIComponent(sql.queryText) + \"&\" + this.providerConfiguration.FQLFormat;\r\n        if (this.providerConfiguration.Access_Token) {\r\n            requestUrl += '&access_token=' + this.providerConfiguration.Access_Token;\r\n        }\r\n\r\n        var requestData = {\r\n            url: requestUrl,\r\n            dataType: \"JSON\",\r\n            success: function (data, textStatus, jqXHR) {\r\n                query.rawDataList = data.data;\r\n                var compiler = Container.createModelBinderConfigCompiler(query, []);\r\n                compiler.Visit(query.expression);\r\n\r\n                if (query.expression instanceof $data.Expressions.CountExpression) {\r\n                    query.rawDataList = [{ cnt: data.data.length }];\r\n                }\r\n                callBack.success(query);\r\n            },\r\n            error: function (jqXHR, textStatus, errorThrow) {\r\n                var errorData = {};\r\n                try {\r\n                    errorData = JSON.parse(jqXHR.responseText).error;\r\n                } catch (e) {\r\n                    errorData = errorThrow + ': ' + jqXHR.responseText;\r\n                }\r\n                callBack.error(errorData);\r\n            }\r\n        };\r\n\r\n        this.context.prepareRequest.call(this, requestData);\r\n        this.AuthenticationProvider.CreateRequest(requestData);\r\n    },\r\n    _discoverType: function (dept, type, result) {\r\n        type.memberDefinitions.getPublicMappedProperties().forEach(function (memDef) {\r\n            var type = Container.resolveType(memDef.dataType);\r\n\r\n            if (type.isAssignableTo || type == Array) {\r\n                var name = dept ? (dept + '.' + memDef.name) : memDef.name;\r\n\r\n                if (type == Array || type.isAssignableTo($data.EntitySet)) {\r\n                    if (memDef.inverseProperty)\r\n                        type = Container.resolveType(memDef.elementType);\r\n                    else\r\n                        return;\r\n                }\r\n\r\n                result.push({ name: name, type: type })\r\n                this._discoverType(name, type, result);\r\n            }\r\n        }, this);\r\n    },\r\n    _compile: function (query) {\r\n        var sqlText = Container.createFacebookCompiler().compile(query);\r\n        return sqlText;\r\n    },\r\n    getTraceString: function (query) {\r\n        if (!this.AuthenticationProvider)\r\n            this.AuthenticationProvider = new $data.Authentication.Anonymous({});\r\n\r\n        var sqlText = this._compile(query);\r\n        return sqlText;\r\n    },\r\n    setContext: function (ctx) {\r\n        this.context = ctx;\r\n    },\r\n    saveChanges: function (callBack) {\r\n        Guard.raise(new Exception(\"Not implemented\", \"Not implemented\"));\r\n    }\r\n}, null);\r\n\r\n$data.StorageProviderBase.registerProvider(\"Facebook\", $data.storageProviders.Facebook.FacebookProvider);\r\n","import $data from 'jaydata/core';\r\n\r\nimport FacebookConverter from './FacebookConverter.js';\r\nimport FacebookProvider from './FacebookProvider.js';\r\nimport FacebookCompiler from './FacebookCompiler.js';\r\nimport user from './EntitySets/FQL/user.js';\r\nimport friend from './EntitySets/FQL/friend.js';\r\nimport page from './EntitySets/FQL/page.js';\r\nimport FQLContext from './EntitySets/FQLContext.js';\r\n\r\nexport default $data;\r\n"],"sourceRoot":"/source/"}